var COLORS = {
  FREE_SLOT:  { r: 255, g: 255, b: 255 }, // White
  WALL:       { r: 133, g: 113, b:  94 }, // Brown
  PRINCESS:   { r: 197, g:  83, b: 218 }, // Purple
  KNIGHT:     { r: 213, g:  12, b:  12 }, // Red
  BLUE_PATH:  { r: 118, g: 183, b: 246 }, // Blue
  GREEN_PATH: { r:  42, g: 255, b:  28 }, // Green
};
var a = 4;
var b = 4;
var creerMatrice = function (nbRangees, nbColonnes) {
var resultat = Array(nbRangees);
for (var i=0; i<nbRangees; i++) {
resultat[i] = Array(nbColonnes);
}
var y = 0;
while(y<nbColonnes){
    var x = 0;
while(x<nbRangees){
    
    resultat[x][y] = "-";
    x++;}
    y++;}
return resultat;
};
var grid = creerMatrice(a,b);

var drawGrid = function (grid){
setScreenMode (a,b);
var y=0;
    while (y<b){
        var x=0;
        while (x<a){
    setPixel(x,y,{ r: 255, g:255, b:255});
            x++;}
        y++;}
};

var addRandomWalls = function(grid, d){
    
    var y = 0;
    while (y < b){
        var x = 0;
        while (x < a){
    if (Math.random() < d){
    grid[x][y] = "m";
        setPixel(x,y,{ r: 133, g: 113, b:  94 });
   }
            x++;}
        y++;}
};

function randomIntFromInterval(min,max)
{
    return Math.floor(Math.random()*(max-min+1)+min);
}

var xSlot = 0;
var ySlot = 0;
var findFreeSlot = function(){
    var tries = 0;
    var slot = 0;
    while(slot != "-" && tries < a*b){
    var x = randomIntFromInterval(0,a-1);
    var y = randomIntFromInterval(0,b-1);
        slot = grid[x][y];
    if(slot == "-"){
        xSlot = x;
        ySlot = y;
    }
        else{
        tries++;
            if(tries == a*b){
                return null;
            }
            continue;     
    }
    }
};


var addCharacters = function(grid){
    findFreeSlot();
    grid[xSlot][ySlot] = "p";
    setPixel(xSlot,ySlot,COLORS.PRINCESS);
    findFreeSlot();
    grid[xSlot][ySlot] = "c";
    setPixel(xSlot,ySlot,COLORS.KNIGHT);
};

        
drawGrid();

addRandomWalls(grid, 0.1);

findFreeSlot();

addCharacters(grid);

print(grid);
var dir = null;
var nextSlot = null;
var path = [];
pause()
var slotType = function(grid,x,y){
    if(xSlot+x < 0 ||
          xSlot+x >= grid.length ||
          ySlot+y < 0 ||
          ySlot+y >= grid.length){
           nextSlot = 'OoB';}
        else if(grid[xSlot+x][ySlot+y] === 'p'){
                nextSlot = grid[xSlot+x][ySlot];
            nextSlot =   'Princesse';
        }
        else if(grid[xSlot+x][ySlot+y] !== '-'){
                nextSlot = grid[xSlot+x][ySlot];
            nextSlot = 'notFree';}
        else{
            nextSlot = 'Free';
            setPixel(xSlot+x,ySlot+y,COLORS.BLUE_PATH);
        }
    }; pause()

for (var i=0;i<4;i++) {
    if(i==0){
        dir = 'Right';
    slotType(grid,1,0);
    if (nextSlot=='Free') path.push([xSlot+1,ySlot])
    print(nextSlot);}
    else if(i==1){
        dir = 'Left';
    slotType(grid,-1,0);
        if (nextSlot=='Free') path.push([xSlot-1,ySlot])
        
    print(nextSlot);}
    else if(i==2){
        dir = 'Up';
    slotType(grid,0,1);
        if (nextSlot=='Free') path.push([xSlot,ySlot+1])
    print(nextSlot);}
    else if(i==3){
        dir = 'Down';
    slotType(grid,0,-1);
        if (nextSlot=='Free') path.push([xSlot,ySlot-1])
        y
    print(nextSlot);}
}
path




===========================================





var COLORS = {
  FREE_SLOT:  { r: 255, g: 255, b: 255 }, // White
  WALL:       { r: 133, g: 113, b:  94 }, // Brown
  PRINCESS:   { r: 197, g:  83, b: 218 }, // Purple
  KNIGHT:     { r: 213, g:  12, b:  12 }, // Red
  BLUE_PATH:  { r: 118, g: 183, b: 246 }, // Blue
  GREEN_PATH: { r:  42, g: 255, b:  28 }, // Green
};
var a = 4;
var b = 4;
var creerMatrice = function (nbRangees, nbColonnes) {
var resultat = Array(nbRangees);
for (var i=0; i<nbRangees; i++) {
resultat[i] = Array(nbColonnes);
}
var y = 0;
while(y<nbColonnes){
    var x = 0;
while(x<nbRangees){
    
    resultat[x][y] = "-";
    x++;}
    y++;}
return resultat;
};
var grid = creerMatrice(a,b);

var drawGrid = function (grid){
setScreenMode (a,b);
var y=0;
    while (y<b){
        var x=0;
        while (x<a){
    setPixel(x,y,{ r: 255, g:255, b:255});
            x++;}
        y++;}
};

var addRandomWalls = function(grid, d){
    
    var y = 0;
    while (y < b){
        var x = 0;
        while (x < a){
    if (Math.random() < d){
    grid[x][y] = "m";
        setPixel(x,y,{ r: 133, g: 113, b:  94 });
   }
            x++;}
        y++;}
};

function randomIntFromInterval(min,max)
{
    return Math.floor(Math.random()*(max-min+1)+min);
}

var xSlot = 0;
var ySlot = 0;
var findFreeSlot = function(){
    var tries = 0;
    var slot = 0;
    while(slot != "-" && tries < a*b){
    var x = randomIntFromInterval(0,a-1);
    var y = randomIntFromInterval(0,b-1);
        slot = grid[x][y];
    if(slot == "-"){
        xSlot = x;
        ySlot = y;
    }
        else{
        tries++;
            if(tries == a*b){
                return null;
            }
            continue;     
    }
    }
};


var addCharacters = function(grid){
    findFreeSlot();
    grid[xSlot][ySlot] = "p";
    setPixel(xSlot,ySlot,COLORS.PRINCESS);
    findFreeSlot();
    grid[xSlot][ySlot] = "c";
    setPixel(xSlot,ySlot,COLORS.KNIGHT);
};

        
drawGrid();

addRandomWalls(grid, 0);

findFreeSlot();

addCharacters(grid);

print(grid);
var dir = null;
var nextSlot = null;
var path = [];

var slotType = function(grid,x,y){
    if(xSlot+x < 0 ||
          xSlot+x >= grid.length ||
          ySlot+y < 0 ||
          ySlot+y >= grid.length){
           nextSlot = 'OoB';}
        else if(grid[xSlot+x][ySlot+y] === 'p'){
                nextSlot = grid[xSlot+x][ySlot];
            nextSlot =   'Princesse';
        }
        else if(grid[xSlot+x][ySlot+y] !== '-'){
                nextSlot = grid[xSlot+x][ySlot];
            nextSlot = 'notFree';}
        else{
            nextSlot = 'Free';
            setPixel(xSlot+x,ySlot+y,COLORS.BLUE_PATH);
            path.push([xSlot+x,ySlot+y]);
        }
    };
for (var i=0;i<4;i++) {
    if(i==0){
        dir = 'Right';
    slotType(grid,1,0);
    print(nextSlot);}
    else if(i==1){
        dir = 'Left';
    slotType(grid,-1,0);
    print(nextSlot);}
    else if(i==2){
        dir = 'Up';
    slotType(grid,0,1);
    print(nextSlot);}
    else if(i==3){
        dir = 'Down';
    slotType(grid,0,-1);
    print(nextSlot);}
}

print(path);